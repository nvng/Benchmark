syntax = "proto3";

option optimize_for = LITE_RUNTIME;
// option optimize_for = CODE_SIZE; // SerializeToArray 比 LITE_RUNTIME 慢
// option optimize_for = SPEED; // 默认

/*
   optimize for CODE_SIZE does not generate fast accessor
   methods for everything, but relies on slow reflection,

   optimize for SPEED will give you the fast accessors

   and optimize for LITE_RUNTIME will also give you fast accessors,
   but does not support the full functionality of protobuf, but only 
   the lighter subset protobuf-lite. Basically, this means descriptors
   or reflection are not available.
 */

import "msg_common.proto";
import "msg_internal_common.proto";
import "msg_client_common.proto";
import "msg_client.proto";
import "msg_mail.proto";
import "msg_shop.proto";
import "msg_achievement.proto";
import "msg_activity.proto";

enum EMsgInternalDBSubType
{
        E_MIDBST_ReqDBDataList = 0x0;
}

// 约定：凡是DB结构，每个字段初始序号间隔10，方便后面插入。
// 要兼容，不能修改原有字段序号。
message DBPlayerInfo
{
  sint64 version = 10;
  sint64 player_guid = 20;
  string nick_name = 30;
  string icon = 40;
  string we_chat_icon = 50;
  repeated sint64 icon_idx_list = 60;
  repeated sint64 attr_list = 70;
  repeated sint64 cdkey_list = 80;
  repeated string str_attr_list = 90;

  repeated MsgGoodsItem goods_list = 100;
  DBPlayerMailSys mail_sys = 110;
  DBGameSeasonInfo game_season = 120;
  MsgShopMgr shop_mgr = 130;
  MsgADMgr ad_mgr = 140;
  MsgVIPMgr vip_mgr = 150;
  MsgHeroMgr hero_mgr = 160;
  MsgAchievementMgr achievement_mgr = 170;
  MsgActivityMgr activity_mgr = 180;
  repeated MsgBagBufInfoList bag_buf_list = 190;
}

message DBRobotInfo
{
  sint64 cfg_id = 10;
  sint64 id = 20;
  sint64 lv = 30;
  sint64 exp = 40;
  string nick_name = 50;
  string icon = 60;

  DBGameSeasonInfo game_season = 70;
}

message DBRobotList
{
        sint64 version = 1;
        repeated DBRobotInfo robot_list = 10;
}

message MsgDBDataVersion
{
        EInternalErrorType error_type = 1;
        sint64 guid = 2;
        sint64 version = 3;
}

message MsgDBDataVersionList
{
        map<sint64, MsgDBDataVersion> item_list = 1;
}

message MsgDBData
{
        EInternalErrorType error_type = 1;
        sint64 guid = 2;
        sint64 version = 3;
        bytes data = 5;
}

message MsgDBDataList
{
        EInternalErrorType error_type = 1;
        message MsgDBDataItem
        {
                sint64 guid = 1;
                sint64 version = 2;
                bytes data = 3;
        }
        repeated MsgDBDataItem item_list = 2;
}

enum EMsgInternalGenGuidSubType
{
        E_MIGGST_Req = 0x0;
}

message DBGenGuid
{
        message DBGenGuidItem
        {
                sint64 cur = 10;
                sint64 max = 20;
        }
        repeated DBGenGuidItem item_list = 10;
}

enum EGenGuidType
{
        E_GGT_PlayerGuid = 0x0;
}

message MsgGenGuid
{
        EInternalErrorType error_type = 1;
        EGenGuidType type = 2;
        sint64 id = 3;
}

enum EMySqlTaskType
{
        E_MySql_TT_Version = 0x0;
        E_MySql_TT_Load = 0x1;
        E_MySql_TT_Save = 0x2;
        E_MySql_TT_CheckIDUsable = 0x3;
}

message MailReqDBData
{
        EInternalErrorType error_type = 1;
        EMySqlTaskType task_type = 2;

        sint64 guid = 3;
        sint64 version = 4;
        bytes data = 5;
        sint64 data_size = 6;
}

message MailReqDBDataList
{
        repeated MailReqDBData list = 1;
}

message MailTest
{
        sint64 version = 1;
        string data = 2;
}

message DBLoginInfo
{
        sint64 app_id = 1;
        sint64 user_id = 2;
        string token = 4;
        string sign = 5;
        sint64 time_out = 6;

        sint64 player_guid = 10;
        sint64 version = 11;
}

// vim: fenc=utf8:expandtab:ts=8
