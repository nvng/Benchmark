syntax = "proto3";

option optimize_for = LITE_RUNTIME;
// option optimize_for = CODE_SIZE; // SerializeToArray 比 LITE_RUNTIME 慢
// option optimize_for = SPEED; // 默认

/*
   optimize for CODE_SIZE does not generate fast accessor
   methods for everything, but relies on slow reflection,

   optimize for SPEED will give you the fast accessors

   and optimize for LITE_RUNTIME will also give you fast accessors,
   but does not support the full functionality of protobuf, but only 
   the lighter subset protobuf-lite. Basically, this means descriptors
   or reflection are not available.
 */

// package PokerProto;

import "msg_client_common.proto";

enum EMsgClientADSubType
{
  E_MCADST_Use = 0x0;
}

message MsgADUse
{
  EClientErrorType error_type = 1;
  sint64 id = 2;

  MsgPlayerChange player_change = 10;
}

// vim: fenc=utf8:expandtab:ts=8
